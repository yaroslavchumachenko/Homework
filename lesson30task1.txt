question1: n^2 ( Ця функція перебирає кожен елемент у first_list і 
перевіряє, чи існує він у second_list. 
Усередині циклу вона виконує 
пошук у second_list для кожного елемента first_list)

question2: 1 (Ця функція виконує цикл 10 разів, кожного разу 
збільшуючи n у степені 3. Оскільки кількість ітерацій постійна (10), 
то часова складність складає O(1))

question3: n^2 ( Ця функція перебирає кожен елемент 
second_list і перевіряє, чи існує він у first_list)

question4: n ( Ця функція виконує ітерацію над кожним елементом вхідного списку один раз і оновлює res, якщо поточний елемент більший за поточне значення res. 
Отже, вона має часову складність O(N), де N - довжина списку.)

question5: n^2 ( Ця функція генерує всі можливі пари чисел від 0 до n-1, використовуючи вкладені цикли)

question6: log n (Ця функція багаторазово ділить n на 2 до тих пір, поки n не стане рівним 1. Кількість ітерацій, 
необхідних для того, щоб n досягло 1, є логарифмічною по відношенню до )